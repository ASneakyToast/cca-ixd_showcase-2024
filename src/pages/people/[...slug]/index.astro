---
import { Image } from "astro:assets";
import { getCollection, getEntries, getEntry } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import placeholderImage from "/src/media/placeholder-image.jpg";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const peopleEntries = await getCollection('people', ({ data }) => {
    return data.draft != true;
  });

  return peopleEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

// 2.2 Resolve references in the schema

// For astro js processed images
const peopleImages = import.meta.glob( "/src/media/people/*.{jpeg,jpg,png,gif}" );
const projectImages = import.meta.glob("/src/media/projects/**/*.{jpeg,jpg,png,gif,heic}");

// For astro js content refrences
const featuredProject = await getEntry( entry.data.projects[0].collection, entry.data.projects[0].slug);
---

<Layout title="Page title">
  <main class="content">

    <section class="intro">
      <h1 class="intro__title">{ entry.data.name }</h1>
      { entry.data.pronouns && (
        <p class="intro__subheading">{ entry.data.pronouns }</p>
      )}
      <p class="intro__subheading">{ entry.data.program }, { entry.data.graduationYear }</p>
    </section>

    <section class="sticky-body">
      { entry.data.image ? (
        <Image 
          class="intro__headshot"
          src={ peopleImages[ entry.data.image ]() }
          alt={`A photo of ${ entry.data.name }`}
          width="1440"
          format="webp"
        />
      ):(
        <Image 
          class="intro__headshot"
          src={ placeholderImage }
          alt={`A photo of ${ entry.data.name }`}
          width="1440"
          format="webp"
        />
      )}

      <section class="info">
        { entry.data.website && (
          <a class="info__website" target="_blank" href={` ${ entry.data.website } `}>View website</a>
        )}

        { entry.data.linkedIn && (
          <a class="info__linkedin" target="_blank" href={` ${ entry.data.linkedIn } `}>LinkedIn</a>
        )}

        <Content />

        { entry.data.hometown && (
          <h3>Hometown</h3>
          <p>{ entry.data.hometown }</p>
        )}

        { entry.data.hobbies && (
          <h3>Hobbies</h3>
          <p class="intro__hobbies">{ entry.data.hobbies }</p>
        )}

        { entry.data.funFact && (
          <h3>Fun fact</h3>
          <p class="intro__fun-fact">{ entry.data.funFact }</p>
        )}
      </section>
    </section>

    <section class="thesis-project">
      <h2>Thesis</h2>
      <div class="lf-row-spaced_even">
        <h3>{ featuredProject.data.title }</h3>
        <a class="thesis-project__button" href={ `/projects/${ featuredProject.slug }` }>View project</a>
      </div>
      <a href={ `/projects/${ featuredProject.slug }/`}>
        <Image 
          class="thesis-project__thumbnail"
          src={ projectImages[ `/src/media/projects/${ featuredProject.slug }/${ featuredProject.data.listingImage }` ]() }
          alt={`An image of the project: ${ featuredProject.data.title }`}
          width="1440"
          format="webp"
        />
      </a>
    </section>

  </main>
</Layout>

<style lang="scss" is:global>
  @import "../../../styles/type.scss";

  .info p, .info li {
    font-family: Raleway, sans-serif;
    font-size: 28px;
    font-weight: 400;
    line-height: 50px;
    color: #000000;
  }

  .info p {
    margin-bottom: 32px;
  }
</style>

<style lang="scss">
  @import "../../../styles/type.scss";

  .lf-row-spaced_even {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  main.content {
    padding: 0 var(--spacing-page_gutter);
  }

  .intro {
    margin-bottom: 40px;

    &__title {
      @include type-title;
      margin-bottom: 30px;
    }
    &__headshot {
      max-width: 50%;
      width: 100%;
      height: auto;
      max-height: 80vh;
      object-fit: cover;
      position: sticky;
      top: 40px;
    }
    &__subheading {
      display: inline-block;

      margin: 0 25px 0 0;

      font-family: Raleway, sans-serif;
      font-size: 24px;
      font-weight: 700;
      color: #8B8B8B;
    }
  }

  .thesis-project {
    margin-top: 160px;
    display: flex;
    flex-direction: column;
    gap: 32px;

    & img {
      width: 100%;
      height: auto;
    }

    & h2, h3 {
      @include type-heading;
      margin: 0;
    }

    &__button {
      padding: 14px 40px;
      background-color: #222222;
      border-radius: 6px;
      color: white;

      @include type-nav-button;

      margin-left: 40px;

      transition: background-color 200ms;
      &:hover {
        background-color: #000000;
        color: white;
      }
    }
  }

  .sticky-body {
    display: flex;
    flex-direction: row;
    gap: 40px;
  }

  .info {
    &__website, &__linkedin {
      @include type-cta;
      display: flex;
      flex-direction: row;
      gap: 10px;
      width: fit-content;
      border: 3px solid #000000;
      border-radius: 6px;
      background: #ffffff;
      color: #000000;
      padding: 14px 40px;
      margin-bottom: 32px;
    }
    &__linkedin {
      margin-bottom: 40px;
    }
    & h2 {
      @include type-label;
    }
    & p {
      @include type-intro;
    }
    & ul {
      margin-left: 24px;
    }
  }
</style>
